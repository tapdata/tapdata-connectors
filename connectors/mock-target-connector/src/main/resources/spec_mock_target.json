{
  "properties": {
    "name": "Mock Target",
    "icon": "icons/mock-target.png",
    "doc" : "${doc}",
    "id": "mock-target",
    "tags": ["schema-free","Database"]
  },
  "configOptions": {
    "pdkExpansion": [],
		"capabilities": [
			{"id": "master_slave_merge"},
			{"id": "dynamic_schema"}
		],
    "connection": {
      "type": "object",
      "properties": {
        "write_interval": {"type": "number", "title": "${df_write_interval}", "x-decorator": "FormItem", "x-component": "InputNumber", "x-index": 5, "required": true, "default": 1000, "x-reactions": {"dependencies": ["__TAPDATA.connection_type"], "fulfill": { "schema": { "x-decorator-props.style.display": "{{$deps[0]!=='source' ? null:'none'}}", "required": "{{$deps[0]!=='source' ? true:false}}" } }}},
        "write_interval_totals": {"type": "number", "title": "${df_write_interval_totals}", "x-decorator": "FormItem", "x-decorator-props": {"tooltip": "${df_interval_totals_tooltip}"}, "x-component": "InputNumber", "x-index": 6, "required": true, "default": 0, "x-reactions": {"dependencies": ["__TAPDATA.connection_type"], "fulfill": { "schema": { "x-decorator-props.style.display": "{{$deps[0]!=='source' ? null:'none'}}", "required": "{{$deps[0]!=='source' ? true:false}}" } }}},
        "write_log": {"type": "boolean", "title": "${df_write_log}", "x-decorator": "FormItem", "x-component": "Switch", "x-index": 7, "required": true, "default": false, "x-reactions": {"dependencies": ["__TAPDATA.connection_type"], "fulfill": { "schema": { "x-decorator-props.style.display": "{{$deps[0]!=='source' ? null:'none'}}", "required": "{{$deps[0]!=='source' ? true:false}}" } }}}
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/mock_target_en_US.md",
      "df_write_interval": "Write Interval (ms)",
      "df_write_interval_totals": "Write Interval Upper Limit",
      "df_write_log": "Print write log",
      "df_table_name": "Table Name"
    },
    "zh_CN": {
      "doc": "docs/mock_target_zh_CN.md",
      "df_write_interval": "写入间隔(毫秒)",
      "df_write_interval_totals": "写入间隔上限",
      "df_write_log": "打印写入日志",
      "df_table_name": "表名"
    },
    "zh_TW": {
      "doc": "docs/mock_target_zh_TW.md",
      "df_write_interval": "寫入間隔(毫秒)",
      "df_write_interval_totals": "寫入間隔上限",
      "df_write_log": "打印寫入日誌",
      "df_table_name": "表名"
    }
  },
  "dataTypes": {
    "string[($byte)]": {"to" : "TapString", "byte" : "16m", "defaultByte": 64, "preferByte": 100, "byteRatio": 3},
    "number[($precision,$scale)]": {"to": "TapNumber", "precision" : [1, 40], "defaultPrecision" : 4, "scale" : [0, 10], "defaultScale" : 1},
    "boolean": {"to": "TapBoolean"},
    "array": {"to": "TapArray", "pkEnablement": false},
    "binary": {"to": "TapBinary", "pkEnablement": false},
    "map": {"to": "TapMap", "pkEnablement": false},
    "time": {"to": "TapTime", "range": ["-838:59:59", "838:59:59"]},
    "date": {"to": "TapDate", "range": ["1000-01-01", "9999-12-31"], "pattern": "yyyy-MM-dd"},
    "datetime[($fraction)]": {"to": "TapDateTime", "range": ["1000-01-01 00:00:00.000000", "9999-12-31 23:59:59.999999"], "pattern": "yyyy-MM-dd HH:mm:ss.SSSSSS", "fraction": [0, 6], "defaultFraction": 0},
    "timestamp[($fraction)]": {"to": "TapDateTime", "range": ["1970-01-01 00:00:01.000000", "2038-01-19 03:14:07.999999"], "pattern": "yyyy-MM-dd HH:mm:ss.SSSSSS", "fraction": [0, 6], "defaultFraction": 0, "withTimeZone": true},
    "now": {"to": "TapDateTime", "range": ["1970-01-01 00:00:01.000000", "2038-01-19 03:14:07.999999"], "pattern": "yyyy-MM-dd HH:mm:ss.SSSSSS", "fraction": [0, 6], "defaultFraction": 6, "withTimeZone": true, "queryOnly": true},
    "uuid": {"to": "TapString", "byte" : 36, "preferByte": 36, "byteRatio": 3, "queryOnly": true},
    "serial[($begin,$step)]": {"to": "TapNumber", "min" : [1, 40], "queryOnly": true},
    "rnumber[($precision)]": {"to": "TapNumber", "precision" : [1, 40], "defaultPrecision" : 4, "queryOnly": true},
    "rstring[($byte)]": {"to": "TapString", "byte" : "16m", "defaultByte": 8, "preferByte": 8, "byteRatio": 3, "queryOnly": true},
    "rlongstring[($byte)]": {"to": "TapString", "byte" : "2g", "queryOnly": true},
    "rlongbinary[($byte)]": {"to": "TapBinary", "byte" : "2g", "queryOnly": true},
    "rdatetime[($fraction)]": {"to": "TapDateTime", "range": ["1000-01-01 00:00:00.000000", "9999-12-31 23:59:59.999999"], "pattern": "yyyy-MM-dd HH:mm:ss.SSSSSS", "fraction": [0, 6], "defaultFraction": 0, "queryOnly": true}
  }
}
