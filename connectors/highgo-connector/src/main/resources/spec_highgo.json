{
  "properties": {
    "name": "Highgo",
    "icon": "icons/highgo.svg",
    "doc" : "${doc}",
    "id": "highgo",
    "tags": ["Database", "ssl", "doubleActive"]
  },
  "configOptions": {
    "capabilities":[
      {
        "id": "dml_insert_policy",
        "alternatives": ["update_on_exists", "ignore_on_exists", "just_insert"]
      },
      {
        "id": "dml_update_policy",
        "alternatives": ["ignore_on_nonexists", "insert_on_nonexists", "log_on_nonexists"]
      },
      {
        "id": "api_server_supported"
      },
      {
        "id": "source_support_exactly_once"
      }
    ],
    "connection": {
      "type": "object",
      "properties": {
        "host": {
          "required": true,
          "type": "string",
          "title": "${host}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-decorator-props": {
            "tooltip": "${hostTip}"
          },
          "x-index": 10
        },
        "port": {
          "required": true,
          "type": "string",
          "title": "${port}",
          "default": 5866,
          "x-decorator": "FormItem",
          "x-component": "InputNumber",
          "apiServerKey": "database_port",
          "x-decorator-props": {
            "tooltip": "${portTip}"
          },
          "x-index": 20
        },
        "database": {
          "required": true,
          "type": "string",
          "title": "${database}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "database_name",
          "x-decorator-props": {
            "tooltip": "${databaseTip}"
          },
          "x-index": 30
        },
        "schema": {
          "required": true,
          "type": "string",
          "title": "${schema}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "database_owner",
          "x-decorator-props": {
            "tooltip": "${schemaTip}"
          },
          "x-index": 40
        },
        "user": {
          "type": "string",
          "title": "${user}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "database_username",
          "x-index": 60
        },
        "password": {
          "type": "string",
          "title": "${password}",
          "x-decorator": "FormItem",
          "x-component": "Password",
		  "apiServerKey": "database_password",
          "x-index": 70
        },
        "logPluginName": {
          "required": true,
          "type": "string",
          "title": "${logPluginName}",
          "default": "pgoutput",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "apiServerKey": "logPlugin",
          "x-decorator-props": {
            "tooltip": "${logPluginNameTip}"
          },
          "x-index": 80,
          "enum": [
            {
              "label": "DECODERBUFS",
              "value": "decoderbufs"
            },
            {
              "label": "WAL2JSON",
              "value": "wal2json"
            },
            {
              "label": "WAL2JSONRDS",
              "value": "wal2json_rds"
            },
            {
              "label": "WAL2JSONSTREMING",
              "value": "wal2json_streaming"
            },
            {
              "label": "WAL2JSONRDSSTREAMING",
              "value": "wal2json_rds_streaming"
            },
            {
              "label": "PGOUTPUT",
              "value": "pgoutput"
            }
          ]
        },
        "OPTIONAL_FIELDS": {
          "type": "void",
          "properties": {
            "extParams": {
              "type": "string",
              "title": "${extParams}",
              "x-decorator": "FormItem",
              "x-component": "Input",
              "apiServerKey": "additionalString",
              "x-decorator-props": {
                "tooltip": "${extParamsTip}"
              },
              "x-index": 50
            },
            "timezone": {
              "type": "string",
              "title": "${timezone}",
              "default": "",
              "x-decorator": "FormItem",
              "x-component": "Select",
              "x-decorator-props": {
                "tooltip": "${timezoneTip}"
              },
              "x-index": 90,
              "enum": [
                {
                  "label": "",
                  "value": ""
                },
                {
                  "label": "UTC -11",
                  "value": "-11:00"
                },
                {
                  "label": "UTC -10",
                  "value": "-10:00"
                },
                {
                  "label": "UTC -09",
                  "value": "-09:00"
                },
                {
                  "label": "UTC -08",
                  "value": "-08:00"
                },
                {
                  "label": "UTC -07",
                  "value": "-07:00"
                },
                {
                  "label": "UTC -06",
                  "value": "-06:00"
                },
                {
                  "label": "UTC -05",
                  "value": "-05:00"
                },
                {
                  "label": "UTC -04",
                  "value": "-04:00"
                },
                {
                  "label": "UTC -03",
                  "value": "-03:00"
                },
                {
                  "label": "UTC -02",
                  "value": "-02:00"
                },
                {
                  "label": "UTC -01",
                  "value": "-01:00"
                },
                {
                  "label": "UTC",
                  "value": "+00:00"
                },
                {
                  "label": "UTC +01",
                  "value": "+01:00"
                },
                {
                  "label": "UTC +02",
                  "value": "+02:00"
                },
                {
                  "label": "UTC +03",
                  "value": "+03:00"
                },
                {
                  "label": "UTC +04",
                  "value": "+04:00"
                },
                {
                  "label": "UTC +05",
                  "value": "+05:00"
                },
                {
                  "label": "UTC +06",
                  "value": "+06:00"
                },
                {
                  "label": "UTC +07",
                  "value": "+07:00"
                },
                {
                  "label": "UTC +08",
                  "value": "+08:00"
                },
                {
                  "label": "UTC +09",
                  "value": "+09:00"
                },
                {
                  "label": "UTC +10",
                  "value": "+10:00"
                },
                {
                  "label": "UTC +11",
                  "value": "+11:00"
                },
                {
                  "label": "UTC +12",
                  "value": "+12:00"
                },
                {
                  "label": "UTC +13",
                  "value": "+13:00"
                },
                {
                  "label": "UTC +14",
                  "value": "+14:00"
                }
              ]
            }
          }
        }
      }
    },
    "node": {
      "type": "object",
      "properties": {
        "closeNotNull": {
          "type": "boolean",
          "title": "${closeNotNull}",
          "default": false,
          "x-index": 1,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-decorator-props": {
            "tooltip": "${closeNotNullTooltip}"
          },
          "x-reactions": [
            {
              "dependencies": ["$inputs"],
              "fulfill": {
                "state": {
                  "display": "{{$deps[0].length > 0 ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ]
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/highgo_en_US.md",
      "host": "Host",
      "hostTip": "The address of the database, it can be an IP address or a domain name, for example: 192.168.1.200",
      "port": "Port",
      "portTip": "The port number of the database, the default port of Postgres is 5432",
      "database" : "database",
      "databaseTip": "database name, you can query all databases through pg_database",
      "schema" : "schema",
      "schemaTip": "schema name, you can query all schemas through pg_namespace",
      "extParams" : "extParams",
      "extParamsTip": "Additional connection parameters in URI, you can write according to personalized scenarios \nfor example: ?binaryTransfer=false&forceBinary=false&reWriteBatchedInserts=true",
      "user" : "user",
      "password" : "password",
      "logPluginName" : "logPluginName",
      "logPluginNameTip": "The higher version PG comes with the PGOUTPUT plugin, but the before data in the logs is not complete. \nThe author recommends using WAL2JSON, and the installation method can be found in the MD documentation",
      "timezone": "timezone",
      "timezoneTip": "Specify the time zone, otherwise no time zone processing will be done",
      "closeNotNull": "Ignore NotNull",
      "closeNotNullTooltip": "When the switch is turned on, non empty restrictions are discarded"
    },
    "zh_CN": {
      "doc": "docs/highgo_zh_CN.md",
      "host": "地址",
      "hostTip": "数据库的地址，它可以是IP地址或者域名，例如：192.168.1.200",
      "port": "端口",
      "portTip": "数据库的端口号，Postgres默认端口5432",
      "database" : "数据库",
      "databaseTip": "数据库名称，可以通过查询pg_database查询所有数据库",
      "schema" : "模型",
      "schemaTip": "每个数据库下有多个模型架构，可以通过查询pg_namespace查询所有模型",
      "extParams" : "额外参数",
      "extParamsTip": "URI额外的连接参数，可以根据个性化场景书写，如：?binaryTransfer=false&forceBinary=false&reWriteBatchedInserts=true",
      "user" : "账号",
      "password" : "密码",
      "logPluginName" : "日志插件",
      "logPluginNameTip": "高版本PG自带PGOUTPUT插件，但是日志的before数据并不完整，笔者推荐使用WAL2JSON，安装方式见MD文档",
      "timezone": "时区",
      "timezoneTip": "指定时区，否则不做时区处理",
      "closeNotNull": "忽略NotNull",
      "closeNotNullTooltip": "开关打开时会将非空限制丢弃"
    },
    "zh_TW": {
      "doc": "docs/highgo_zh_TW.md",
      "host": "地址",
      "hostTip": "數據庫的地址，它可以是IP地址或者域名，例如：192.168.1.200",
      "port": "端口",
      "portTip": "數據庫的端口號，Postgres默認端口5432",
      "database" : "數據庫",
      "databaseTip": "數據庫名稱，可以通過查詢pg_database查詢所有數據庫",
      "schema" : "模型",
      "schemaTip": "每個數據庫下有多個模型架構，可以通過查詢pg_namespace查詢所有模型",
      "extParams" : "額外參數",
      "extParamsTip": "URI額外的連接參數，可以根據個性化場景書寫，如：?binaryTransfer=false&forceBinary=false&reWriteBatchedInserts=true",
      "user" : "賬號",
      "password" : "密碼",
      "logPluginName" : "日誌插件",
      "logPluginNameTip": "高版本PG自帶PGOUTPUT插件，但是日誌的before數據並不完整，筆者推薦使用WAL2JSON，安裝方式見MD文檔",
      "timezone": "時區",
      "timezoneTip": "指定時區，否則不做時區處理",
      "closeNotNull": "忽略NotNull",
      "closeNotNullTooltip": "開關打開時會將非空限制丟棄"
    }
  },
  "dataTypes": {
    "smallint": {
      "bit": 16,
      "priority": 3,
      "value": [
        -32768,
        32767
      ],
      "to": "TapNumber"
    },
    "integer": {
      "bit": 32,
      "priority": 1,
      "value": [
        -2147483648,
        2147483647
      ],
      "to": "TapNumber"
    },
    "bigint": {
      "bit": 64,
      "priority": 3,
      "value": [
        -9223372036854775808,
        9223372036854775807
      ],
      "to": "TapNumber"
    },
    "numeric[($precision,$scale)]": {
      "precision": [
        1,
        1000
      ],
      "scale": [
        0,
        1000
      ],
      "fixed": true,
      "preferPrecision": 20,
      "preferScale": 8,
      "priority": 1,
      "to": "TapNumber"
    },
    "real": {
      "bit": 32,
      "priority": 2,
      "precision": [
        1,
        6
      ],
      "scale": [
        0,
        6
      ],
      "fixed": false,
      "to": "TapNumber"
    },
    "double precision": {
      "priority": 2,
      "precision": [
        1,
        17
      ],
      "preferPrecision": 11,
      "preferScale": 4,
      "scale": [
        0,
        17
      ],
      "fixed": false,
      "to": "TapNumber"
    },
    "character[($byte)]": {
      "byte": 10485760,
      "priority": 2,
      "preferByte": 255,
      "fixed": true,
      "to": "TapString"
    },
    "varchar[($byte)]": {
      "byte": 10485760,
      "priority": 1,
      "defaultByte": 10485760,
      "preferByte": 2000,
      "to": "TapString"
    },
    "text": {
      "byte": "4g",
      "priority": 2,
      "to": "TapString"
    },
    "bytea": {
      "byte": "4g",
      "priority": 1,
      "to": "TapBinary"
    },
    "bit[($byte)]": {
      "byte": 64,
      "defaultByte": 1,
      "priority": 3,
      "fixed": true,
      "queryOnly": true,
      "to": "TapBinary"
    },
    "bit varying[($byte)]": {
      "byte": 64,
      "defaultByte": 64,
      "priority": 1,
      "queryOnly": true,
      "to": "TapBinary"
    },
    "boolean": {
      "bit": 1,
      "priority": 1,
      "to": "TapBoolean"
    },
    "date": {
      "range": [
        "0001-01-01",
        "9999-12-31"
      ],
      "pattern": "yyyy-MM-dd",
      "priority": 1,
      "to": "TapDate"
    },
    "interval": {
      "preferByte": 100,
      "queryOnly": true,
      "to": "TapString"
    },
    "timestamp[($fraction)] without time zone": {
      "range": [
        "1000-01-01 00:00:00",
        "9999-12-31 23:59:59"
      ],
      "pattern": "yyyy-MM-dd HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": false,
      "defaultFraction": 6,
      "priority": 1,
      "to": "TapDateTime"
    },
    "timestamp[($fraction)] with time zone": {
      "range": [
        "1000-01-01 00:00:00",
        "9999-12-31 23:59:59"
      ],
      "pattern": "yyyy-MM-dd HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": true,
      "defaultFraction": 6,
      "priority": 2,
      "to": "TapDateTime"
    },
    "time[($fraction)] without time zone": {
      "range": [
        "00:00:00",
        "23:59:59"
      ],
      "pattern": "HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": false,
      "defaultFraction": 6,
      "priority": 1,
      "to": "TapTime"
    },
    "time[($fraction)] with time zone": {
      "range": [
        "00:00:00",
        "23:59:59"
      ],
      "pattern": "HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": true,
      "defaultFraction": 6,
      "priority": 2,
      "to": "TapTime"
    },
    "$nothing array": {
      "queryOnly": true,
      "to": "TapArray"
    },
    "point": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "line": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "lseg": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "box": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "path": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "polygon": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "circle": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "cidr": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "inet": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "macaddr": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "uuid": {
      "to": "TapString",
      "preferByte": 256,
      "queryOnly": true
    },
    "xml": {
      "to": "TapString",
      "queryOnly": true
    },
    "json": {
      "to": "TapString",
      "queryOnly": true
    },
    "tsvector": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "tsquery": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "oid": {
      "to": "TapNumber",
      "bit": 64,
      "queryOnly": true
    },
    "regproc": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regprocedure": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regoper": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regoperator": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regclass": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regtype": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regconfig": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regdictionary": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    }
  }
}
