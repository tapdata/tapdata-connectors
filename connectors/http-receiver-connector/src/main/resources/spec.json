{
  "properties": {
    "name": "Http Receiver",
    "icon": "icons/http.png",
    "doc": "${doc}",
    "id": "http-receiver",
    "tags": [
      "SaaS"
    ]
  },
  "configOptions": {
    "pdkExpansion": [],
    "node": {
      "type": "object",
      "properties": {
      }
    },
    "connection": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "string",
          "required": true,
          "title": "${table_name}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 10
        },
        "authType": {
          "type": "boolean",
          "title": "${c_oauth_type}",
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "required": true,
          "default": true,
          "show": false,
          "x-display": "hidden",
          "x-decorator-props": {
            "colon": false
          },
          "x-index": 12
        },

        "hookText": {
          "type": "string",
          "title": "${hookTitle}",
          "x-decorator": "FormItem",
          "x-component-props": {
            "readOnly": true
          },
          "x-component": "Input",
          "x-index": 20,
          "actionOnCopy": "NEW_WEB_HOOK_URL",
          "x-reactions": {
            "dependencies": [
              "authType"
            ],
            "fulfill": {
              "schema": {
                "required": "{{!$deps[0]}}"
              },
              "state": {
                "display": "{{$deps[0] ? \"hidden\" : \"visible\"}}"
              }
            }
          }
        },
        "hookButton": {
          "type": "void",
          "title": " ",
          "x-decorator": "FormItem",
          "x-component-props": {
            "onClick": "{{useAsyncDataSourceByConfig({service: getToken, withoutField: true}, {name:'hookText'}, $values, $form)}}"
          },
          "x-decorator-props": {
            "colon": false
          },
          "x-content": "${hookButton}",
          "x-component": "Button",
          "x-index": 30,
          "x-reactions": {
            "dependencies": [
              "authType"
            ],
            "fulfill": {
              "state": {
                "display": "{{$deps[0] ? \"hidden\" : \"visible\"}}"
              }
            }
          }
        },

        "hookURLSuffix": {
          "type": "string",
          "title": "${c_hook_suffix}",
          "x-decorator": "FormItem",
          "x-component-props": {
            "readOnly": true
          },
          "x-component": "Input",
          "default": "",
          "x-index": 32,
          "x-reactions": [
            "{{useAsyncDataSourceByConfig({service: getHost, withoutField: true, fieldName: 'value'})}}",
            {
            "dependencies": [
              "authType"
            ],
            "fulfill": {
              "schema": {
                "required": "{{$deps[0]}}"
              },
              "state": {
                "display": "{{$deps[0] ? \"visible\" : \"hidden\"}}"
              }
            }
          }]
        },
        "expireSeconds": {
          "type": "string",
          "title": "${c_expire_second}",
          "x-decorator": "FormItem",
          "default": 3600,
          "x-component": "InputNumber",
          "x-index": 35,
          "required": true,
          "x-reactions": {
            "dependencies": [
              "authType"
            ],
            "fulfill": {
              "schema": {
                "required": "{{$deps[0]}}"
              },
              "state": {
                "display": "{{$deps[0] ? \"visible\" : \"hidden\"}}"
              }
            }
          }
        },
        "supplierConfig": {
          "type": "array",
          "title": "${c_supplier_config}",
          "x-decorator": "FormItem",
          "x-component": "ArrayTable",
          "x-index": 36,
          "required": false,
          "default": [
          ],
          "x-reactions": {
            "dependencies": [
              "authType"
            ],
            "fulfill": {
              "schema": {
                "required": "{{$deps[0]}}"
              },
              "state": {
                "display": "{{$deps[0] ? \"visible\" : \"hidden\"}}"
              }
            }
          },
          "items": {
            "type": "object",
            "properties": {
              "c1": {
                "type": "void",
                "x-component": "ArrayTable.Column",
                "x-index": 361,
                "x-component-props": {
                  "title": "${c_supplier_name}",
                  "width": 150
                },
                "properties": {
                  "randomId": {
                    "type": "string",
                    "x-display": "hidden",
                    "default": "{{ getUid() }}"
                  },
                  "supplierKey": {
                    "type": "string",
                    "required": true,
                    "x-decorator": "FormItem",
                    "x-component": "Input",
                    "x-component-props": {
                      "disabled": "{{!!$record.refreshURL}}"
                    }
                  }
                }
              },
              "c2": {
                "type": "void",
                "x-component": "ArrayTable.Column",
                "x-index": 362,
                "x-component-props": {
                  "title": "${c_refresh_url}"
                },
                "properties": {
                  "space": {
                    "type": "void",
                    "x-component": "Space",
                    "properties": {
                      "refreshURL": {
                        "type": "string",
                        "required": true,
                        "default": null,
                        "description": "",
                        "x-component-props": {
                          "readOnly": true,
                          "style": {
                            "width": "320px"
                          }
                        },
                        "x-decorator": "FormItem",
                        "x-component": "Input",
                        "x-index": 3621,
                        "x-reactions": {
                          "fulfill": {
                            "state": {
                              "display": "{{$self.value ? \"visible\" : \"hidden\"}}"
                            }
                          }
                        }
                      },
                      "generate": {
                        "type": "void",
                        "x-decorator": "FormItem",
                        "x-component-props": {
                          "onClick": "{{ () => handleGetGenerateRefreshToken($index, $record, $values.supplierConfig, {'expireSeconds' : $values.expireSeconds}) }}"
                        },
                        "x-content": "${c_generate_url}",
                        "x-component": "Button",
                        "x-index": 3622,
                        "x-decorator-props": {
                          "colon": false
                        },
                        "x-reactions": {
                          "fulfill": {
                            "state": {
                              "display": "{{!!$record.refreshURL ? \"hidden\" : \"visible\"}}",
                              "disabled": "{{!!$record.refreshURL}}"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "c3": {
                "type": "void",
                "x-component": "ArrayTable.Column",
                "x-index": 363,
                "x-component-props": {
                  "title": "${c_operator}",
                  "prop": "operations",
                  "fixed": "right",
                  "width": 60
                },
                "properties": {
                  "refreshURL": {
                    "type": "void",
                    "x-component": "FormItem",
                    "properties": {
                      "remove": {
                        "type": "void",
                        "x-component": "ArrayTable.Remove"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "add": {
              "type": "void",
              "x-component": "ArrayTable.Addition",
              "title": "${c_supplier_add}"
            }
          }
        },

        "handleType": {
          "type": "boolean",
          "title": "${open_script}",
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "required": true,
          "default": false,
          "show": false,
          "x-decorator-props": {
            "colon": false
          },
          "x-reactions": [
            {
              "target": "eventScript",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value===true}}"
                }
              }
            }
          ],
          "x-index": 40
        },
        "eventScript": {
          "title": "${node_script_title}",
          "type": "string",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "gridSpan": 2,
            "colon": false,
            "tooltip": "${node_tip_script}"
          },
          "default": "\n\n\t//${node_return_type}\n\t//return {\n\t//\t\"opType\": \"i\", ${node_event_type}\n\t//\t\"after\": { }, ${node_event_data}\n\t//}\n\treturn {\n\t\t\"opType\": \"i\", \n\t\t\"after\": eventData\n\t};",
          "x-component": "JsEditor",
          "x-component-props": {
            "height": 300,
            "before": "function handleEvent(eventData, supplierId) {",
            "after": "}",
            "beforeRegexp": "^[^]*function\\s+handleEvent\\s*\\(eventData, supplierId\\)\\s+\\{",
            "afterRegexp": "}[^}]*$"
          },
          "x-reactions": {
            "dependencies": [
              "handleType"
            ],
            "fulfill": {
              "schema": {
                "required": "{{$deps[0]}}"
              }
            }
          },
          "x-index": 50
        },
        "tryRun": {
          "type": "void",
          "title": " ",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "colon": false
          },
          "x-component-props": {
            "onClick": "{{ () => handleJsDebug(['eventScript']) }}"
          },
          "x-reactions": [
            {
              "dependencies": [
                "handleType"
              ],
              "fulfill": {
                "state": {
                  "display": "{{$deps[0] ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ],
          "x-content": "${try_run}",
          "x-component": "Button",
          "x-index": 60
        },
        "isDefaultAddr": {
          "type": "boolean",
          "default": true,
          "title": "${cache_type}",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "enum": [
            {
              "label": "${is_default_addr}",
              "value": true
            },
            {
              "label": "${using_custom_methods}",
              "value": false
            }
          ],
          "x-index": 70,
          "required": false,
          "x-display": "hidden"
        },
        "cacheAddr": {
          "title": "${cache_addr}",
          "type": "string",
          "required": false,
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 80,
          "x-reactions": {
            "dependencies": [
              "isDefaultAddr"
            ],
            "fulfill": {
              "state": {
                "display": "{{$deps[0] ? \"hidden\" : \"visible\"}}"
              },
              "schema": {
                "required": "{{$deps[0]? false : true}}"
              }
            }
          },
          "x-display": "hidden"
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/http_en_US.md",

      "c_oauth_type": "Enable auth mode",
      "c_supplier_config": "Supplier List",
      "c_hook_suffix": "Server URL Addr",
      "c_supplier_name": "Supplier ID",
      "c_refresh_url": "Obtain Service Token Link",
      "c_generate_url": "Generate",
      "c_operator": "Operate",
      "c_supplier_add": "Add new supplier",
      "c_expire_second": "Token expiration time",

      "table_name": "Table Name",
      "webHook": "Service URL",
      "hookButton": "Generate Service URL",
      "hookTitle": "Service URL",
      "try_run": "Test Run",
      "using_custom_methods": "Using custom methods",
      "is_default_addr": "Use Default Cache",
      "cache_type": "Cache Type",
      "cache_addr": "Cache addr",
      "open_script": "Enable data processing scripts",
      "node_script_title": "Data processing script",
      "node_illustrate_title": "JavaScript Writing Instructions",
      "node_return_type": "Script Method Return Value Specification: data is an array or k-v object, but if return null, this event will be ignore",
      "node_event_type": "type is an enum value (range are i or u or d, default is i), and i is insert, u is update, d is delete",
      "node_event_data": "The event data body is a K-V object, which will become a piece of data in this table: add this data when the event type is insert; When the event type is modified, modify this data; when the event type is deleted, delete this data",
      "node_tip_script": "You can preprocess the data received by the receiver from third-party platforms through this script, and return the type (eventType) and final data body of this data according to the specified structure (data)."
    },
    "zh_CN": {
      "doc": "docs/http_zh_CN.md",

      "c_oauth_type": "开启鉴权模式",
      "c_supplier_config": "供应商列表",
      "c_hook_suffix": "服务URL访问地址",
      "c_supplier_name": "供应商ID",
      "c_refresh_url": "服务令牌获取链接",
      "c_generate_url": "生成",
      "c_operator": "操作",
      "c_supplier_add": "新增供应商",
      "c_expire_second": "服务令牌过期时间",

      "table_name": "表名称",
      "webHook": "Service Hook",
      "hookButton": "生成服务 URL",
      "hookTitle": "服务 URL",
      "open_script": "开启数据处理脚本",
      "node_script_title": "数据处理脚本",
      "try_run": "试运行",
      "is_default_addr": "使用系统默认消息缓存方式",
      "cache_type": "消息缓存方式",
      "using_custom_methods": "使用自定义消息缓存地址",
      "cache_addr": "消息缓存库地址",
      "node_illustrate_title": "JavaScript编写说明",
      "node_return_type": "脚本方法返回值规范：返回结果可以是数组也可以是K-V对象，如果返回值为null，则会忽略此事件",
      "node_event_type": "事件类型是一个枚举值（仅包括i、d、u，默认i），i表示插入、u表示更新、d表示删除",
      "node_event_data": "事件数据体是一个K-V对象，这将会成为这张表中的一条数据：事件类型为插入时新增此数据；事件类型为修改时，修改此数据，事件类型为删除时，删除此数据",
      "node_tip_script": "您可以通过此脚本预处理接收器收到的第三方平台推送过来的数据，并按指定结构返回这个数据的类型（eventType）以及最终数据体（data）。"
    },
    "zh_TW": {
      "doc": "docs/http_zh_TW.md",

      "c_oauth_type": "開啟鑒權模式",
      "c_supplier_config": "供應商清單",
      "c_hook_suffix": "服務URL訪問地址",
      "c_supplier_name": "供應商ID",
      "c_refresh_url": "服務權杖獲取連結",
      "c_generate_url": "生成",
      "c_operator": "操作",
      "c_supplier_add": "新增供應商",
      "c_expire_second": "服務權杖過期時間",

      "table_name": "錶名稱",
      "webHook": "Service Hook",
      "hookButton": "生成服務URL",
      "hookTitle": "服務URL",
      "open_script": "開啟數據處理腳本",
      "node_script_title": "數據處理腳本",
      "node_illustrate_title": "JavaScript編寫說明",
      "try_run": "試運行",
      "is_default_addr": "使用系統默認消息緩存管道",
      "cache_type": "消息緩存管道",
      "using_custom_methods": "使用自定义消息缓存地址",
      "cache_addr": "消息緩存庫地址",
      "node_return_type": "腳本方法返回值規範：返回結果可以是數組也可以是K-V對象，如果返回值為null，則會忽略此事件",
      "node_event_type": "事件類型是一個枚舉值（僅包括i、d、u，默認i），i表示插入、u表示更新、d表示删除",
      "node_event_data": "事件數據體是一個K-V對象，這將會成為這張錶中的一條數據：事件類型為插入時新增此數據；事件類型為修改時，修改此數據，事件類型為删除時，删除此數據",
      "node_tip_script": "您可以通過此腳本預處理接收器收到的協力廠商平臺推送過來的數據，並按指定結構返回這個數據的類型（eventType）以及最終數據體（data）。"
    }
  },
  "dataTypes": {
  }
}
