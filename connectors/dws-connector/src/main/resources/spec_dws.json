{
  "properties": {
    "name": "GaussDB(DWS)",
    "icon": "icons/dws.png",
    "doc" : "${doc}",
    "id": "dws",
    "tags": ["Database"]
  },
  "configOptions": {
    "capabilities":[
      {
        "id": "dml_insert_policy",
        "alternatives": ["update_on_exists", "ignore_on_exists", "just_insert"]
      },
      {
        "id": "dml_update_policy",
        "alternatives": ["ignore_on_nonexists", "insert_on_nonexists"]
      },
      {
        "id": "api_server_supported"
      },
      {
        "id": "source_support_exactly_once"
      }
    ],
    "connection": {
      "type": "object",
      "properties": {
        "host": {
          "required": true,
          "type": "string",
          "title": "${host}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-index": 1
        },
        "port": {
          "required": true,
          "type": "string",
          "title": "${port}",
          "x-decorator": "FormItem",
          "x-component": "InputNumber",
          "apiServerKey": "database_port",
          "x-index": 2
        },
        "database": {
          "required": true,
          "type": "string",
          "title": "${database}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "database_name",
          "x-index": 3
        },
        "schema": {
          "required": true,
          "type": "string",
          "title": "${schema}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "database_owner",
          "x-index": 4
        },
        "extParams": {
          "type": "string",
          "title": "${extParams}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "additionalString",
          "x-index": 5
        },
        "user": {
          "type": "string",
          "title": "${user}",
          "x-decorator": "FormItem",
          "x-component": "Input",
		  "apiServerKey": "database_username",
          "x-index": 6
        },
        "password": {
          "type": "string",
          "title": "${password}",
          "x-decorator": "FormItem",
          "x-component": "Password",
		  "apiServerKey": "database_password",
          "x-index": 7
        },
        "timezone": {
          "type": "string",
          "title": "${timezone}",
          "default": "",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "x-index": 9,
          "enum": [
            {
              "label": "",
              "value": ""
            },
            {
              "label": "UTC -11",
              "value": "-11:00"
            },
            {
              "label": "UTC -10",
              "value": "-10:00"
            },
            {
              "label": "UTC -09",
              "value": "-09:00"
            },
            {
              "label": "UTC -08",
              "value": "-08:00"
            },
            {
              "label": "UTC -07",
              "value": "-07:00"
            },
            {
              "label": "UTC -06",
              "value": "-06:00"
            },
            {
              "label": "UTC -05",
              "value": "-05:00"
            },
            {
              "label": "UTC -04",
              "value": "-04:00"
            },
            {
              "label": "UTC -03",
              "value": "-03:00"
            },
            {
              "label": "UTC -02",
              "value": "-02:00"
            },
            {
              "label": "UTC -01",
              "value": "-01:00"
            },
            {
              "label": "UTC",
              "value": "+00:00"
            },
            {
              "label": "UTC +01",
              "value": "+01:00"
            },
            {
              "label": "UTC +02",
              "value": "+02:00"
            },
            {
              "label": "UTC +03",
              "value": "+03:00"
            },
            {
              "label": "UTC +04",
              "value": "+04:00"
            },
            {
              "label": "UTC +05",
              "value": "+05:00"
            },
            {
              "label": "UTC +06",
              "value": "+06:00"
            },
            {
              "label": "UTC +07",
              "value": "+07:00"
            },
            {
              "label": "UTC +08",
              "value": "+08:00"
            },
            {
              "label": "UTC +09",
              "value": "+09:00"
            },
            {
              "label": "UTC +10",
              "value": "+10:00"
            },
            {
              "label": "UTC +11",
              "value": "+11:00"
            },
            {
              "label": "UTC +12",
              "value": "+12:00"
            },
            {
              "label": "UTC +13",
              "value": "+13:00"
            },
            {
              "label": "UTC +14",
              "value": "+14:00"
            }
          ]
        }
      }
    },
    "node": {
      "type": "object",
      "properties": {
        "closeNotNull": {
          "type": "boolean",
          "title": "${closeNotNull}",
          "default": false,
          "x-index": 1,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-decorator-props": {
            "tooltip": "${closeNotNullTooltip}"
          },
          "x-reactions": [
            {
              "dependencies": ["$inputs"],
              "fulfill": {
                "state": {
                  "display": "{{$deps[0].length > 0 ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ]
        },
        "replaceBlank": {
          "type": "string",
          "title": "${replaceBlank}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-component-props": {
            "trim": false
          },
          "x-decorator-props": {
            "tooltip": "${replaceBlankTooltip}"
          },
          "x-index": 5,
          "x-reactions": [
            {
              "dependencies": ["$inputs"],
              "fulfill": {
                "state": {
                  "display": "{{$deps[0].length > 0 ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ]
        },
        "distributedKey": {
          "title": "${distributedKey}",
          "type": "array",
          "x-index": 10,
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "tooltip": "${distributedKeyTip}"
          },
          "x-component": "FieldSelect",
          "x-component-props": {
            "allowCreate": false,
            "multiple": true,
            "filterable": true
          },
          "x-reactions": [
            "{{useAsyncDataSourceByConfig({service: loadNodeFieldOptions, withoutField: true}, $values.$inputs[0])}}",
            {
              "dependencies":["$inputs", "type"],
              "fulfill":{
                "state":{
                  "display": "{{$deps[0].length > 0 && $deps[1] !== 'database' ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ]
        },
        "enableFileInput": {
          "type": "boolean",
          "title": "${enableFileInput}",
          "default": false,
          "x-index": 17,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-reactions": [
            {
              "dependencies": ["$inputs"],
              "fulfill": {
                "state": {
                  "display": "{{$deps[0].length > 0 ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ]
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/dws_en_US.md",
      "host": "Host",
      "port": "Port",
      "database" : "database",
      "schema" : "schema",
      "extParams" : "extParams",
      "user" : "user",
      "password" : "password",
      "logPluginName" : "logPluginName",
      "timezone": "timezone",
      "closeNotNull": "Close NotNull",
      "closeNotNullTooltip": "When the switch is turned on, the non-empty limit of the string type will be discarded",
      "replaceBlank": "Replace Blank",
      "replaceBlankTooltip": "Because the DWS database will automatically convert empty strings to null for storage of string types, when violating the not null constraint, it is used to replace the content of empty characters",
      "enableFileInput": "Enable file input",
      "isPartition": "Is partition table",
      "isPartitionTooltip": "This configuration will not create a partition table automatically. If the target is a manually created partition table, please check to prevent writing policies from causing errors",
      "distributedKey": "Distributed Key",
      "distributedKeyTip": "Distributed key field, used for dn distribution, the selected field must be included by the primary key/unique key, not filled in by default according to the primary key field"
    },
    "zh_CN": {
      "doc": "docs/dws_zh_CN.md",
      "host": "地址",
      "port": "端口",
      "database" : "数据库",
      "schema" : "模型",
      "extParams" : "额外参数",
      "user" : "账号",
      "password" : "密码",
      "logPluginName" : "日志插件",
      "timezone": "时区",
      "closeNotNull": "忽略NotNull",
      "closeNotNullTooltip": "开关打开时会将字符串类型的非空限制丢弃",
      "replaceBlank": "替换空字符",
      "replaceBlankTooltip": "由于DWS数据库字符串类型会自动将空字符串转为null存储，因此违背not null约束时，用于替换空字符的内容",
      "enableFileInput": "启用文件输入",
      "isPartition": "是否分区表",
      "isPartitionTooltip": "该配置自动建表不会建分区表，如果目标是手动创建的分区表，请勾选防止写入策略导致错误",
      "distributedKey": "分布列",
      "distributedKeyTip": "分布列字段，用于dn分布，选取字段必须是被主键/唯一键包含，不填默认按主键字段"
    },
    "zh_TW": {
      "doc": "docs/dws_zh_TW.md",
      "host": "地址",
      "port": "端口",
      "database" : "數據庫",
      "schema" : "模型",
      "extParams" : "額外參數",
      "user" : "賬號",
      "password" : "密碼",
      "logPluginName" : "日誌插件",
      "timezone": "時區",
      "closeNotNull": "忽略NotNull",
      "closeNotNullTooltip": "開關打開時會將字符串類型的非空限制丟棄",
      "replaceBlank": "替換空字符",
      "replaceBlankTooltip": "由於DWS數據庫字符串類型會自動將空字符串轉為null存儲，因此違背not null約束時，用於替換空字符的內容",
      "enableFileInput": "啟用文件輸入",
      "isPartition": "是否分區表",
      "isPartitionTooltip": "該配置自動建表不會建分區表，如果目標是手動創建的分區表，請勾選防止寫入策略導致錯誤",
      "distributedKey": "分布列",
      "distributedKeyTip": "分布列字段，用於dn分布，選取字段必須是被主鍵/唯一鍵包含，不填默認按主鍵字段"
    }
  },
  "dataTypes": {
    "smallint": {
      "bit": 16,
      "priority": 3,
      "value": [
        -32768,
        32767
      ],
      "to": "TapNumber"
    },
    "integer": {
      "bit": 32,
      "priority": 1,
      "value": [
        -2147483648,
        2147483647
      ],
      "to": "TapNumber"
    },
    "bigint": {
      "bit": 64,
      "priority": 3,
      "value": [
        -9223372036854775808,
        9223372036854775807
      ],
      "to": "TapNumber"
    },
    "numeric[($precision,$scale)]": {
      "precision": [
        1,
        1000
      ],
      "scale": [
        0,
        1000
      ],
      "fixed": true,
      "preferPrecision": 20,
      "preferScale": 8,
      "priority": 1,
      "to": "TapNumber"
    },
    "real": {
      "bit": 32,
      "priority": 2,
      "precision": [
        1,
        6
      ],
      "scale": [
        0,
        6
      ],
      "fixed": false,
      "to": "TapNumber"
    },
    "double precision": {
      "priority": 2,
      "precision": [
        1,
        17
      ],
      "preferPrecision": 11,
      "preferScale": 4,
      "scale": [
        0,
        17
      ],
      "fixed": false,
      "to": "TapNumber"
    },
    "character[($byte)]": {
      "byte": 10485761,
      "priority": 2,
      "preferByte": 255,
      "fixed": true,
      "to": "TapString"
    },
    "character varying[($byte)]": {
      "byte": 10485761,
      "priority": 1,
      "defaultByte": 10485760,
      "preferByte": 2000,
      "to": "TapString"
    },
    "nvarchar2[($byte)]": {
      "byte": 10485761,
      "priority": 2,
      "to": "TapString"
    },
    "text": {
      "byte": "4g",
      "priority": 2,
      "to": "TapString"
    },
    "bytea": {
      "byte": "4g",
      "priority": 1,
      "to": "TapBinary"
    },
    "bit[($byte)]": {
      "byte": 64,
      "defaultByte": 1,
      "priority": 3,
      "fixed": true,
      "queryOnly": true,
      "to": "TapBinary"
    },
    "bit varying[($byte)]": {
      "byte": 64,
      "defaultByte": 64,
      "priority": 1,
      "queryOnly": true,
      "to": "TapBinary"
    },
    "boolean": {
      "bit": 1,
      "priority": 1,
      "to": "TapBoolean"
    },
    "date": {
      "range": [
        "0001-01-01",
        "9999-12-31"
      ],
      "pattern": "yyyy-MM-dd",
      "priority": 1,
      "to": "TapDate"
    },
    "interval": {
      "preferByte": 100,
      "queryOnly": true,
      "to": "TapString"
    },
    "timestamp[($fraction)] without time zone": {
      "range": [
        "1000-01-01 00:00:00",
        "9999-12-31 23:59:59"
      ],
      "pattern": "yyyy-MM-dd HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": false,
      "defaultFraction": 6,
      "priority": 1,
      "to": "TapDateTime"
    },
    "timestamp[($fraction)] with time zone": {
      "range": [
        "1000-01-01 00:00:00",
        "9999-12-31 23:59:59"
      ],
      "pattern": "yyyy-MM-dd HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": true,
      "defaultFraction": 6,
      "priority": 2,
      "to": "TapDateTime"
    },
    "time[($fraction)] without time zone": {
      "range": [
        "00:00:00",
        "23:59:59"
      ],
      "pattern": "HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": false,
      "defaultFraction": 6,
      "priority": 1,
      "to": "TapTime"
    },
    "time[($fraction)] with time zone": {
      "range": [
        "00:00:00",
        "23:59:59"
      ],
      "pattern": "HH:mm:ss",
      "fraction": [
        0,
        6
      ],
      "withTimeZone": true,
      "defaultFraction": 6,
      "priority": 2,
      "to": "TapTime"
    },
    "$nothing array": {
      "queryOnly": true,
      "to": "TapArray"
    },
    "point": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "line": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "lseg": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "box": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "path": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "polygon": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "circle": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "cidr": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "inet": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "macaddr": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "uuid": {
      "to": "TapString",
      "preferByte": 256,
      "queryOnly": true
    },
    "xml": {
      "to": "TapString",
      "queryOnly": true
    },
    "json": {
      "to": "TapString",
      "queryOnly": true
    },
    "tsvector": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "tsquery": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "oid": {
      "to": "TapNumber",
      "bit": 64,
      "queryOnly": true
    },
    "regproc": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regprocedure": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regoper": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regoperator": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regclass": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regtype": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regconfig": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    },
    "regdictionary": {
      "to": "TapString",
      "preferByte": 255,
      "queryOnly": true
    }
  }
}

