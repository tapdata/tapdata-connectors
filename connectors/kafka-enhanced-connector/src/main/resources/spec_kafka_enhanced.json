{
  "properties": {
    "name": "Kafka-Enhanced",
    "icon": "icons/kafka_enhanced.png",
    "doc": "${doc}",
    "id": "kafka_enhanced",
    "tags": [
      "schema-free",
      "NoHeartbeat"
    ]
  },
  "configOptions": {
    "pdkExpansion": [],
    "capabilities": [
      {
        "id": "master_slave_merge"
      },
      {
        "id": "dynamic_schema"
      }
    ],
    "connection": {
      "type": "object",
      "properties": {
        "clusterURI": {
          "required": true,
          "type": "string",
          "title": "${clusterURI}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "clusterURI",
          "x-decorator-props": {
            "tooltip": "${clusterURITip}"
          },
          "x-index": 2
        },
        "schemaMode": {
          "type": "string",
          "title": "${schemaMode}",
          "default": "TAP_STANDARD",
          "x-decorator": "FormItem",
          "x-component": "Radio.Group",
          "x-component-props": {
            "optionType": "button"
          },
          "x-index": 10,
          "enum": [
            {
              "label": "${schemaModeTapStandard}",
              "value": "TAP_STANDARD"
            },
            {
              "label": "${schemaModeOriginal}",
              "value": "ORIGINAL"
            }
          ]
        },
        "serialization": {
          "type": "void",
          "x-component": "FormGrid",
          "x-component-props": {
            "minColumns": [
              2
            ]
          },
          "x-index": 20,
          "x-reactions": {
            "fulfill": {
              "state": {
                "visible": "{{$deps[0]==='ORIGINAL'}}"
              }
            },
            "dependencies": [
              "schemaMode"
            ]
          },
          "properties": {
            "keySerialization": {
              "required": true,
              "type": "string",
              "title": "${keySerialization}",
              "default": "Binary",
              "x-decorator": "FormItem",
              "x-component": "Select",
              "x-decorator-props": {
                "tooltip": "${keySerializationTip}"
              },
              "x-index": 21,
              "enum": [
                {
                  "label": "Binary",
                  "value": "Binary"
                },
                {
                  "label": "JsonArray",
                  "value": "JsonArray"
                },
                {
                  "label": "JsonObject",
                  "value": "JsonObject"
                },
                {
                  "label": "String",
                  "value": "String"
                },
                {
                  "label": "Short",
                  "value": "Short"
                },
                {
                  "label": "Integer",
                  "value": "Integer"
                },
                {
                  "label": "Long",
                  "value": "Long"
                },
                {
                  "label": "UUID",
                  "value": "UUID"
                }
              ]
            },
            "valueSerialization": {
              "required": true,
              "type": "string",
              "title": "${valueSerialization}",
              "default": "Binary",
              "x-decorator": "FormItem",
              "x-component": "Select",
              "x-decorator-props": {
                "tooltip": "${valueSerializationTip}"
              },
              "x-index": 22,
              "enum": [
                {
                  "label": "Binary",
                  "value": "Binary"
                },
                {
                  "label": "JsonArray",
                  "value": "JsonArray"
                },
                {
                  "label": "JsonObject",
                  "value": "JsonObject"
                },
                {
                  "label": "String",
                  "value": "String"
                },
                {
                  "label": "Short",
                  "value": "Short"
                },
                {
                  "label": "Integer",
                  "value": "Integer"
                },
                {
                  "label": "Long",
                  "value": "Long"
                },
                {
                  "label": "UUID",
                  "value": "UUID"
                }
              ]
            }
          }
        },
        "useSasl": {
          "type": "boolean",
          "title": "${useSasl}",
          "default": false,
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-index": 21
        },
        "saslMechanism": {
          "type": "string",
          "title": "${saslMechanism}",
          "default": "PLAIN",
          "x-decorator": "FormItem",
          "x-component": "Radio.Group",
          "x-component-props": {
            "optionType": "button"
          },
          "x-index": 22,
          "enum": [
            {
              "label": "PLAIN",
              "value": "PLAIN"
            },
            {
              "label": "SCRAM-SHA-256",
              "value": "SCRAM-SHA-256"
            },
            {
              "label": "SCRAM-SHA-512",
              "value": "SCRAM-SHA-512"
            }
          ],
          "x-reactions": {
            "fulfill": {
              "state": {
                "visible": "{{$deps[0]===true}}"
              }
            },
            "dependencies": [
              "useSasl"
            ]
          }
        },
        "saslUserPassword": {
          "type": "void",
          "x-component": "FormGrid",
          "x-component-props": {
            "minColumns": [
              2
            ]
          },
          "x-index": 23,
          "x-reactions": {
            "fulfill": {
              "state": {
                "visible": "{{$deps[0]===true && ['PLAIN','SCRAM-SHA-256','SCRAM-SHA-512'].includes($deps[1])}}"
              }
            },
            "dependencies": [
              "useSasl", "saslMechanism"
            ]
          },
          "properties": {
            "saslUsername": {
              "type": "string",
              "title": "${saslUsername}",
              "x-decorator": "FormItem",
              "x-component": "Input",
              "x-index": 1
            },
            "saslPassword": {
              "type": "string",
              "title": "${saslPassword}",
              "x-decorator": "FormItem",
              "x-component": "Password",
              "x-index": 2
            }
          }
        },
        "OPTIONAL_FIELDS": {
          "type": "void",
          "properties": {
            "clientId": {
              "type": "string",
              "title": "${clientId}",
              "x-decorator": "FormItem",
              "x-component": "Input",
              "apiServerKey": "clientId",
              "x-decorator-props": {
                "tooltip": "${clientIdTip}"
              },
              "x-index": 1,
              "x-reactions": {
                "fulfill": {
                  "state": {
                    "visible": "{{false}}"
                  }
                },
                "dependencies": [
                ]
              }
            },
            "acksType": {
              "type": "string",
              "title": "${acksType}",
              "default": "-1",
              "x-decorator": "FormItem",
              "x-component": "Select",
              "apiServerKey": "acksTypeTip",
              "x-index": 10,
              "enum": [
                {
                  "label": "${acksTypeNotSure}",
                  "value": "0"
                },
                {
                  "label": "${acksTypeJustWriteMaster}",
                  "value": "1"
                },
                {
                  "label": "${acksTypeWriteMostIsr}",
                  "value": "-1"
                },
                {
                  "label": "${acksTypeWriteAllIsr}",
                  "value": "all"
                }
              ]
            },
            "compressionType": {
              "type": "string",
              "title": "${compressionType}",
              "default": "lz4",
              "x-decorator": "FormItem",
              "x-component": "Select",
              "apiServerKey": "compressionType",
              "x-index": 20,
              "enum": [
                {
                  "label": "${compressionTypeDisable}",
                  "value": "disable"
                },
                {
                  "label": "gzip",
                  "value": "gzip"
                },
                {
                  "label": "snappy",
                  "value": "snappy"
                },
                {
                  "label": "lz4",
                  "value": "lz4"
                },
                {
                  "label": "zstd",
                  "value": "zstd"
                }
              ]
            },
            "extParams": {
              "required": false,
              "type": "array",
              "title": "${extParams}",
              "x-decorator": "FormItem",
              "x-component": "ArrayTable",
              "x-index": 30,
              "default": [],
              "items": {
                "type": "object",
                "properties": {
                  "c1": {
                    "type": "void",
                    "x-component": "ArrayTable.Column",
                    "x-index": 1,
                    "x-component-props": {
                      "title": "${extParamsType}"
                    },
                    "properties": {
                      "type": {
                        "type": "string",
                        "required": true,
                        "default": "ALL",
                        "x-decorator": "FormItem",
                        "x-component": "Select",
                        "enum": [
                          {
                            "label": "${extParamsTypeAll}",
                            "value": "ALL"
                          },
                          {
                            "label": "${extParamsTypeAdmin}",
                            "value": "ADMIN"
                          },
                          {
                            "label": "${extParamsTypeConsumer}",
                            "value": "CONSUMER"
                          },
                          {
                            "label": "${extParamsTypeProducer}",
                            "value": "PRODUCER"
                          }
                        ]
                      }
                    }
                  },
                  "c2": {
                    "type": "void",
                    "x-component": "ArrayTable.Column",
                    "x-index": 2,
                    "x-component-props": {
                      "title": "${extParamsKey}"
                    },
                    "properties": {
                      "key": {
                        "type": "string",
                        "required": true,
                        "x-decorator": "FormItem",
                        "x-component": "Input"
                      }
                    }
                  },
                  "c3": {
                    "type": "void",
                    "x-component": "ArrayTable.Column",
                    "x-index": 3,
                    "x-component-props": {
                      "title": "${extParamsValue}"
                    },
                    "properties": {
                      "val": {
                        "type": "string",
                        "required": true,
                        "x-decorator": "FormItem",
                        "x-component": "Input"
                      }
                    }
                  },
                  "options": {
                    "type": "void",
                    "x-component": "ArrayTable.Column",
                    "x-index": 4,
                    "x-component-props": {
                      "title": "${extParamsOptions}",
                      "width": 100,
                      "prop": "operations",
                      "fixed": "right"
                    },
                    "properties": {
                      "operator": {
                        "type": "void",
                        "x-component": "FormItem",
                        "properties": {
                          "remove": {
                            "type": "void",
                            "x-component": "ArrayTable.Remove"
                          },
                          "moveDown": {
                            "type": "void",
                            "x-component": "ArrayTable.MoveDown"
                          },
                          "moveUp": {
                            "type": "void",
                            "x-component": "ArrayTable.MoveUp"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "properties": {
                "add": {
                  "type": "void",
                  "x-component": "ArrayTable.Addition",
                  "title": "${extParamsOptionButtonAdd}"
                }
              }
            }
          }
        }
      }
    },
    "node": {
      "type": "object",
      "properties": {
        "maxConcurrentSize": {
          "type": "number",
          "title": "${maxConcurrentSize}",
          "default": 1,
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "tooltip": "${maxConcurrentSizeTip}"
          },
          "x-component": "InputNumber",
          "x-component-props": {
            "min": 1,
            "max": 99
          },
          "x-index": 30,
          "x-reactions": {
            "fulfill": {
              "state": {
                "visible": "{{$deps[0]!=='target' && $deps[1].length}}"
              }
            },
            "dependencies": [
              "__TAPDATA.connection_type",
              "$outputs"
            ]
          }
        },
        "topic": {
          "type": "void",
          "title": "${topic}",
          "x-component": "FormGrid",
          "x-component-props": {
            "minColumns": [
              2
            ]
          },
          "x-index": 40,
          "x-reactions": {
            "fulfill": {
              "state": {
                "visible": "{{$deps[0]!=='source' && $deps[1].length}}"
              }
            },
            "dependencies": [
              "__TAPDATA.connection_type",
              "$inputs"
            ]
          },
          "properties": {
            "replicasSize": {
              "required": true,
              "type": "number",
              "title": "${replicasSize}",
              "default": 1,
              "x-decorator": "FormItem",
              "x-component": "InputNumber",
              "x-component-props": {
                "min": 1,
                "max": 99
              },
              "x-index": 10,
              "x-decorator-props": {
                "tooltip": "${replicasSizeTip}"
              }
            },
            "partitionSize": {
              "required": true,
              "type": "number",
              "title": "${partitionSize}",
              "default": 3,
              "x-decorator": "FormItem",
              "x-component": "InputNumber",
              "x-component-props": {
                "min": 1,
                "max": 999
              },
              "x-index": 20,
              "x-decorator-props": {
                "tooltip": "${partitionSizeTip}"
              }
            }
          }
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/kafka_enhanced_en_US.md",
      "connectMode": "Connection mode",
      "connectModeKafka": "Kafka",
      "connectModeZookeeper": "Zookeeper",
      "clusterURI": "Connection address",
      "clusterURITip": "Multiple addresses are separated by commas, such as: kafka2:9092,kafka1:9092",
      "schemaMode": "Structural mode",
      "schemaModeTapStandard": "Standard structure",
      "schemaModeOriginal": "Original structure",
      "serialization": "Serializer",
      "keySerialization": "Key serializer",
      "valueSerialization": "Value serializer",
      "clientId": "Client number",
      "concurrentGroupId": "Group number",
      "concurrentGroupIdTip": "Tasks under the same group number share offset advancement",
      "concurrentReadMode": "Concurrent reading",
      "concurrentReadModeTip": "Default: Single-threaded reading",
      "concurrentReadModeTopic": "Adapt according to topic",
      "concurrentReadModePartitions": "Adapt according to partition",
      "concurrentReadModeSize": "Specify concurrency",
      "concurrentReadModeSingle": "Single-threaded reading",
      "maxConcurrentSize": "Maximum number of concurrent reads",
      "maxConcurrentSizeTip": "Default: 1 (non-concurrent)",
      "topic": "Topic configuration",
      "replicasSize": "Number of replicas",
      "replicasSizeTip": "Used when creating a topic, default: 1",
      "partitionSize": "Number of partitions",
      "partitionSizeTip": "Used when creating a topic, default: 3 (if the number of server partitions is less than this configuration, it will be increased)",
      "useSasl": "Enable SASL",
      "saslMechanism": "Mechanism",
      "saslUserPassword": "User And Password",
      "saslUsername": "Username",
      "saslPassword": "Password",
      "useSsl": "Enable SSL",
      "acksType": "ACK confirmation mechanism",
      "acksTypeNotSure": "No confirmation",
      "acksTypeJustWriteMaster": "Write only Master partition",
      "acksTypeWriteMostIsr": "Write most ISR partition",
      "acksTypeWriteAllIsr": "Write all ISR partitions",
      "compressionType": "Compression type",
      "compressionTypeDisable": "No compression",
      "extParams": "Extended configuration",
      "extParamsType": "Type",
      "extParamsKey": "Property",
      "extParamsValue": "Configuration",
      "extParamsOptions": "Operation",
      "extParamsOptionButtonAdd": "Add",
      "extParamsTypeAll": "All",
      "extParamsTypeAdmin": "Management configuration",
      "extParamsTypeConsumer": "Consumer configuration",
      "extParamsTypeProducer": "Production configuration"
    },
    "zh_CN": {
      "doc": "docs/kafka_enhanced_zh_CN.md",
      "connectMode": "连接方式",
      "connectModeKafka": "Kafka",
      "connectModeZookeeper": "Zookeeper",
      "clusterURI": "连接地址",
      "clusterURITip": "多个地址用逗号分隔，如：kafka2:9092,kafka1:9092",
      "schemaMode": "结构模式",
      "schemaModeTapStandard": "标准结构",
      "schemaModeOriginal": "原生结构",
      "serialization": "序列器",
      "keySerialization": "键序列器",
      "valueSerialization": "值序列器",
      "clientId": "客户端编号",
      "concurrentGroupId": "分组编号",
      "concurrentGroupIdTip": "同个分组编号下的任务共享 Offset 推进",
      "concurrentReadMode": "并发读",
      "concurrentReadModeTip": "默认：单线程读取",
      "concurrentReadModeTopic": "根据主题自适应",
      "concurrentReadModePartitions": "根据分区自适应",
      "concurrentReadModeSize": "指定并发数",
      "concurrentReadModeSingle": "单线程读取",
      "maxConcurrentSize": "最大读并发数",
      "maxConcurrentSizeTip": "默认：1（不并发）",
      "topic": "主题配置",
      "replicasSize": "副本数",
      "replicasSizeTip": "创建主题时使用，默认：1",
      "partitionSize": "分区数",
      "partitionSizeTip": "创建主题时使用，默认：3（如果服务端分区数少于此配置，则会进行增加）",
      "useSasl": "启用 SASL",
      "saslMechanism": "安全机制",
      "saslUserPassword": "用户密码",
      "saslUsername": "用户",
      "saslPassword": "密码",
      "useSsl": "启用 SSL",
      "acksType": "ACK 确认机制",
      "acksTypeNotSure": "不确认",
      "acksTypeJustWriteMaster": "仅写入 Master 分区",
      "acksTypeWriteMostIsr": "写入大多数 ISR 分区",
      "acksTypeWriteAllIsr": "写入所有 ISR 分区",
      "compressionType": "压缩类型",
      "compressionTypeDisable": "不压缩",
      "extParams": "扩展配置",
      "extParamsType": "类型",
      "extParamsKey": "属性",
      "extParamsValue": "配置",
      "extParamsOptions": "操作",
      "extParamsOptionButtonAdd": "增加",
      "extParamsTypeAll": "全部",
      "extParamsTypeAdmin": "管理配置",
      "extParamsTypeConsumer": "消费配置",
      "extParamsTypeProducer": "生产配置"
    },
    "zh_TW": {
      "doc": "docs/kafka_enhanced_zh_TW.md",
      "connectMode": "連線方式",
      "connectModeKafka": "Kafka",
      "connectModeZookeeper": "Zookeeper",
      "clusterURI": "連接位址",
      "clusterURITip": "多個位址以逗號分隔，如：kafka2:9092,kafka1:9092",
      "schemaMode": "結構模式",
      "schemaModeTapStandard": "標準結構",
      "schemaModeOriginal": "原生結構",
      "serialization": "序列器",
      "keySerialization": "鍵序列器",
      "valueSerialization": "值序列器",
      "clientId": "客戶端編號",
      "concurrentGroupId": "分組編號",
      "concurrentGroupIdTip": "同分組編號下的任務共享 Offset 推進",
      "concurrentReadMode": "並發讀",
      "concurrentReadModeTip": "預設：單執行緒讀取",
      "concurrentReadModeTopic": "根據主題自適應",
      "concurrentReadModePartitions": "根據分割區自適應",
      "concurrentReadModeSize": "指定並發數",
      "concurrentReadModeSingle": "單執行緒讀取",
      "maxConcurrentSize": "最大讀並發數",
      "maxConcurrentSizeTip": "預設：1（不併發）",
      "topic": "主題配置",
      "replicasSize": "副本數",
      "replicasSizeTip": "建立主題時使用，預設：1",
      "partitionSize": "分區數",
      "partitionSizeTip": "建立主題時使用，預設：3（如果服務端分區數少於此配置，則會進行增加）",
      "useSasl": "啟用 SASL",
      "saslMechanism": "安全機制",
      "saslUserPassword": "用戶密碼",
      "saslUsername": "用戶",
      "saslPassword": "密碼",
      "useSsl": "啟用 SSL",
      "acksType": "ACK 確認機制",
      "acksTypeNotSure": "不確認",
      "acksTypeJustWriteMaster": "僅寫入 Master 分割區",
      "acksTypeWriteMostIsr": "寫入大多數 ISR 分割區",
      "acksTypeWriteAllIsr": "寫入所有 ISR 分割區",
      "compressionType": "壓縮類型",
      "compressionTypeDisable": "不壓縮",
      "extParams": "擴充配置",
      "extParamsType": "型別",
      "extParamsKey": "屬性",
      "extParamsValue": "配置",
      "extParamsOptions": "操作",
      "extParamsOptionButtonAdd": "增加",
      "extParamsTypeAll": "全部",
      "extParamsTypeAdmin": "管理設定",
      "extParamsTypeConsumer": "消費配置",
      "extParamsTypeProducer": "生產配置"
    }
  },
  "dataTypes": {
    "BOOLEAN": {
      "to": "TapBoolean"
    },
    "SHORT": {
      "to": "TapNumber",
      "bit": 16,
      "value": [
        -32768,
        32767
      ]
    },
    "INTEGER": {
      "to": "TapNumber",
      "bit": 32,
      "value": [
        -2147483648,
        2147483647
      ]
    },
    "LONG": {
      "to": "TapNumber",
      "bit": 64,
      "value": [
        -9223372036854775808,
        9223372036854775807
      ]
    },
    "FLOAT": {
      "to": "TapNumber",
      "precision": [
        1,
        6
      ],
      "scale": [
        0,
        6
      ],
      "fixed": false
    },
    "DOUBLE": {
      "to": "TapNumber",
      "precision": [
        1,
        17
      ],
      "preferPrecision": 11,
      "preferScale": 4,
      "scale": [
        0,
        17
      ],
      "fixed": false
    },
    "NUMBER[($precision,$scale)]": {
      "to": "TapNumber",
      "precision": [
        1,
        40
      ],
      "defaultPrecision": 4,
      "scale": [
        0,
        10
      ],
      "defaultScale": 1
    },
    "CHAR[($byte)]": {
      "to": "TapString",
      "byteRatio": 3,
      "defaultByte": 1,
      "fixed": true
    },
    "VARCHAR[($byte)]": {
      "to": "TapString",
      "byteRatio": 3,
      "defaultByte": 1
    },
    "STRING[($byte)]": {
      "to": "TapString",
      "defaultByte": 255
    },
    "TEXT": {
      "to": "TapString",
      "pkEnablement": false
    },
    "BINARY[($byte)]": {
      "to": "TapBinary",
      "pkEnablement": false
    },
    "ARRAY": {
      "to": "TapArray",
      "pkEnablement": false
    },
    "MAP": {
      "to": "TapMap",
      "pkEnablement": false
    },
    "OBJECT": {
      "to": "TapMap",
      "pkEnablement": false
    },
    "TIME": {
      "to": "TapTime",
      "range": [
        "-838:59:59",
        "838:59:59"
      ]
    },
    "DATE": {
      "to": "TapDate",
      "range": [
        "1000-01-01",
        "9999-12-31"
      ],
      "pattern": "yyyy-MM-dd"
    },
    "DATETIME[($fraction)]": {
      "to": "TapDateTime",
      "range": [
        "1000-01-01 00:00:00.000000",
        "9999-12-31 23:59:59.999999"
      ],
      "pattern": "yyyy-MM-dd HH:mm:ss.SSSSSS",
      "fraction": [
        0,
        6
      ],
      "defaultFraction": 0
    },
    "TIMESTAMP[($fraction)]": {
      "to": "TapDateTime",
      "range": [
        "1970-01-01 00:00:01.000000",
        "2038-01-19 03:14:07.999999"
      ],
      "pattern": "yyyy-MM-dd HH:mm:ss.SSSSSS",
      "fraction": [
        0,
        6
      ],
      "defaultFraction": 0,
      "withTimeZone": false
    },
    "UUID": {
      "to": "TapString",
      "byte": 38,
      "preferByte": 38,
      "queryOnly": true
    }
  }
}
