{
  "properties": {
    "name": "Redis",
    "icon": "icons/redis.png",
    "doc": "${doc}",
    "id": "redis",
    "tags": ["Database"]
  },
  "configOptions": {
    "connection": {
      "type": "object",
      "properties": {
        "deploymentMode": {
          "type": "string",
          "title": "${deploymentMode}",
          "default": "standalone",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "x-index": 1,
          "enum": [
            {
              "label": "${standalone}",
              "value": "standalone"
            },
            {
              "label": "${sentinel}",
              "value": "sentinel"
            },
            {
              "label": "${cluster}",
              "value": "cluster"
            }
          ],
          "x-reactions": [
            {
              "target": "*(host,port)",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value === 'standalone'}}"
                }
              }
            },
            {
              "target": "*(sentinelName,sentinelAddress)",
              "fulfill": {
                "state": {
                  "visible": "{{$self.value === 'sentinel' || $self.value === 'cluster'}}"
                }
              }
            }
          ]
        },
        "host": {
          "required": true,
          "type": "string",
          "title": "${host}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-decorator-props": {
            "tooltip": "${hostTip}"
          },
          "x-index": 2
        },
        "port": {
          "type": "string",
          "title": "${port}",
          "x-decorator": "FormItem",
          "x-component": "InputNumber",
          "apiServerKey": "database_port",
          "default": 6379,
          "x-index": 3,
          "x-decorator-props": {
            "tooltip": "${portTip}"
          },
          "required": true
        },
        "sentinelName": {
          "type": "string",
          "title": "${sentinelName}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 4,
          "x-decorator-props": {
            "tooltip": "${sentinelNameTip}"
          },
          "required": true
        },
        "sentinelAddress": {
          "type": "array",
          "title": "${sentinelAddress}",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "tooltip": "${sentinelAddressTip}"
          },
          "x-component": "ArrayItems",
          "x-index": 5,
          "items": {
            "type": "object",
            "properties": {
              "space": {
                "type": "void",
                "x-component": "Space",
                "properties": {
                  "host": {
                    "type": "string",
                    "x-decorator": "FormItem",
                    "x-component": "Input",
                    "x-component-props": {
                      "placeholder": "${Address}"
                    },
                    "x-index": 1
                  },
                  "port": {
                    "type": "number",
                    "x-decorator": "FormItem",
                    "x-component": "InputNumber",
                    "x-component-props": {
                      "placeholder": "${sentinelPort}"
                    },
                    "x-index": 2
                  },
                  "remove": {
                    "type": "void",
                    "x-decorator": "FormItem",
                    "x-component": "ArrayItems.Remove"
                  }
                }
              }
            }
          },
          "properties": {
            "add": {
              "type": "void",
              "title": "${prompt}",
              "x-component": "ArrayItems.Addition"
            }
          }
        },
        "database": {
          "type": "string",
          "title": "Redis DB",
          "default": 0,
          "x-decorator": "FormItem",
          "x-component": "InputNumber",
          "apiServerKey": "database_name",
          "x-index": 6,
          "description": "${databaseProp}",
          "required": true
        },
        "username": {
          "type": "string",
          "title": "${username}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 7,
          "x-decorator-props": {
            "tooltip": "${usernameTip}"
          }
        },
        "password": {
          "type": "string",
          "title": "${password}",
          "x-decorator": "FormItem",
          "x-component": "Password",
          "apiServerKey": "database_password",
          "x-index": 8
        },
        "OPTIONAL_FIELDS": {
          "type": "void",
          "properties": {
            "schemaKey": {
              "type": "string",
              "title": "${schemaKey}",
              "x-decorator": "FormItem",
              "x-component": "Input",
              "apiServerKey": "schemaKey",
              "default": "-schema-key-",
              "x-decorator-props": {
                "tooltip": "${schemaKeyTip}"
              },
              "x-index": 9,
              "required": true
            }
          }
        }
      }
    },
    "node":{
      "properties":{
        "valueType": {
          "type": "string",
          "title": "${valueType}",
          "default": "List",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "x-decorator-props": {
            "tooltip": "${valueTypeTooltip}"
          },
          "x-index": 1,
          "enum": [
            {
              "label": "String",
              "value": "String"
            },
            {
              "label": "List",
              "value": "List"
            },
            {
              "label": "Hash",
              "value": "Hash"
            },
            {
              "label": "Redis",
              "value": "Redis"
            }
          ],
          "x-reactions": [
            {
              "dependencies": ["$inputs"],
              "fulfill": {
                "state": {
                  "display": "{{$deps[0].length > 0 ? \"visible\":\"hidden\"}}"
                }
              }
            }
          ]
        },
        "oneKey": {
          "type": "boolean",
          "title": "${oneKey}",
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-index": 2,
          "x-decorator-props": {
            "tooltip": "${oneKeyTooltip}"
          },
          "default": true,
          "x-reactions": [
            {
              "dependencies": [".valueType","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{$deps[0] !== 'String' && $deps[0] !== 'Redis' && $deps[1].length > 0}}"
                }
              }
            }
          ]
        },
        "listHead": {
          "type": "boolean",
          "title": "${listHead}",
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-index": 4,
          "x-decorator-props": {
            "tooltip": "${listHeadTooltip}"
          },
          "default": true,
          "x-reactions": [
            {
              "dependencies": [".valueType",".oneKey","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{($deps[0] !== 'String' && $deps[0] !== 'Redis') && $deps[1] && $deps[2].length > 0}}"
                }
              }
            }
          ]
        },
        "keyExpression": {
          "type": "string",
          "title": "${keyExpression}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 5,
          "x-decorator-props": {
            "tooltip": "${keyExpressionTooltip}"
          },
          "required": true,
          "x-reactions": [
            {
              "dependencies": [".valueType",".oneKey","type","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{($deps[0] === 'Hash' || !$deps[1]) && $deps[0] !== 'Redis' && ($deps[2] !== 'database') && $deps[3].length > 0}}"
                }
              }
            }
          ]
        },
        "keyPrefix": {
          "type": "string",
          "title": "${keyPrefix}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 6,
          "x-decorator-props": {
            "tooltip": "${keyPrefixTooltip}"
          },
          "x-reactions": [
            {
              "dependencies": [".valueType",".oneKey","type","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{($deps[0] === 'Hash' || !$deps[1]) && $deps[0] !== 'Redis' && ($deps[2] === 'database') && $deps[3].length > 0}}"
                }
              }
            }
          ]
        },
        "keyJoin": {
          "type": "string",
          "title": "${keyJoin}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "default": "-",
          "x-index": 7,
          "x-decorator-props": {
            "tooltip": "${keyJoinTooltip}"
          },
          "x-reactions": [
            {
              "dependencies": [".valueType",".oneKey","type","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{($deps[0] === 'Hash' || !$deps[1]) && $deps[0] !== 'Redis' && ($deps[2] === 'database') && $deps[3].length > 0}}"
                }
              }
            }
          ]
        },
        "keySuffix": {
          "type": "string",
          "title": "${keySuffix}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 8,
          "x-decorator-props": {
            "tooltip": "${keySuffixTooltip}"
          },
          "x-reactions": [
            {
              "dependencies": [".valueType",".oneKey","type","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{($deps[0] === 'Hash' || !$deps[1]) && $deps[0] !== 'Redis' && ($deps[2] === 'database') && $deps[3].length > 0}}"
                }
              }
            }
          ]
        },
        "valueData": {
          "type": "string",
          "title": "${valueData}",
          "default": "Text",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "x-index": 9,
          "x-decorator-props": {
            "tooltip": "${valueDataTooltip}"
          },
          "enum": [
            {
              "label": "Text",
              "value": "Text"
            },
            {
              "label": "Json",
              "value": "Json"
            }
          ],
          "x-reactions": {
            "dependencies": [".valueType",".oneKey","$inputs"],
            "fulfill": {
              "state": {
                "visible": "{{$deps[0] !== 'Redis' && $deps[2].length > 0}}"
              },
              "run": "{{$self.value = 'Json'}}",
              "schema": {
                "x-component-props.options": "{{$deps[0] === 'Hash' && !$deps[1] ? [$self.dataSource[1]] : $self.dataSource}}"
              }
            }
          }
        },
        "valueJoinString": {
          "type": "string",
          "title": "${valueJoinString}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-index": 10,
          "x-decorator-props": {
            "tooltip": "${valueJoinStringTooltip}"
          },
          "default": ",",
          "required": true,
          "x-reactions": [
            {
              "dependencies": [".valueData","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{$deps[0] === 'Text' && $deps[1].length > 0}}"
                }
              }
            }
          ]
        },
        "csvFormat": {
          "type": "boolean",
          "title": "${csvFormat}",
          "x-decorator": "FormItem",
          "x-component": "Switch",
          "x-index": 11,
          "x-decorator-props": {
            "tooltip": "${csvFormatTooltip}"
          },
          "default": true,
          "x-reactions": [
            {
              "dependencies": [".valueData","$inputs"],
              "fulfill": {
                "state": {
                  "visible": "{{$deps[0] === 'Text' && $deps[1].length > 0}}"
                }
              }
            }
          ]
        },
        "rateLimit": {
          "type": "string",
          "title": "${rateLimit}",
          "default": 5000,
          "x-decorator": "FormItem",
          "x-component": "InputNumber",
          "x-index": 4,
          "x-decorator-props": {
            "tooltip": "${rateLimitTooltip}",
            "min": 100
          },
          "x-reactions": {
            "dependencies": ["$inputs"],
            "fulfill": {
              "state": {
                "display": "{{!$deps[0].length ? \"visible\":\"hidden\"}}"
              }
            }
          }
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/redis_en_US.md",
      "host": "DB Host",
      "hostTip": "Redis Address, such as 192.168.1.200",
      "schemaKey": "Schema Key",
      "schemaKeyTip": "Redis stores additional key values for data structures for data synchronization",
      "port": "Port",
      "portTip": "Redis port, default 6379",
      "password": "Password",
      "deploymentMode": "Deployment mode",
      "username": "Username",
      "usernameTip": "Redis username, default is 'default'",
      "sentinelName": "Sentinel name/Cluster name",
      "sentinelNameTip": "The client name recognized by the server does not affect synchronization and is only used for monitoring",
      "standalone": "Single machine deployment",
      "sentinel": "Sentinel deployment",
      "cluster": "Cluster deployment",
      "sentinelAddress" : "Server address",
      "sentinelAddressTip" : "The address port group that the sentry or cluster needs to fill in, for example: 192.168.1.200:6379, 192.168.1.201:6379",
      "Address" : "Please enter the server address",
      "sentinelPort": "Server port",
      "valueType": "Storage format(Redis is isomorphic transfer)",
      "oneKey": "Save in one key",
      "listHead": "Include head",
      "keyExpression": "Key expression",
      "keyPrefix": "Key Prefix",
      "keyJoin": "Key Join String",
      "keySuffix": "Key Suffix",
      "valueData": "Value display",
      "valueJoinString": "Value join string",
      "csvFormat": "Csv Format",
      "expireTime": "Expire time(second)",
      "resetExpire": "Reset expire time when updated",
      "prompt": "Add",
      "valueTypeTooltip": "Redis storage data structure (currently supports three types: String, List, and Hash)",
      "oneKeyTooltip": "When turning on the single key storage switch, all data will be written to the same Redis key (special note: Redis single key supports up to 512M)",
      "listHeadTooltip": "Stored as a List or Hash and in single click mode, this switch supports adding header rows",
      "keyExpressionTooltip": "Key expression (dedicated to data development). When stored as Hash or non single key mode, each data can be stored in a custom formatted key. For example: tap_\\${id}_\\${colName} (special note: it is recommended to use a combination of primary keys or update condition fields. If fewer fields are selected, it may cause key overwriting; if too many other fields are selected, it may affect deletion and update functions",
      "keyPrefixTooltip": "Key prefix (a specialized combination for data replication). When stored in Hash or non single key mode, each data can be stored in a key with a custom prefix",
      "keyJoinTooltip": "Key connector (a specialized combination for data replication). When stored in Hash or non single key mode, each data can be stored in a custom connector. For example, fill in '-', \\${pk1}-\\${pk2}-\\${pk3}",
      "keySuffixTooltip": "Key suffix (a specialized combination for data replication). When stored in Hash or non single key mode, each data can be stored in a custom suffix key",
      "valueDataTooltip": "The format of each row of data stored, supporting text and JSON formats",
      "valueJoinStringTooltip": "If the data is in TEXT format, the interval character can be customized",
      "csvFormatTooltip": "Turn on the CSV formatting switch to convert TEXT to a standard line of CSV",
      "databaseProp": "Please enter a integer between 0 and 15",
      "rateLimit": "Rate Limit QPS",
      "rateLimitTooltip": "The maximum number of requests per second, the default is 5000"
    },
    "zh_CN": {
      "doc": "docs/redis_zh_CN.md",
      "host": "Redis地址",
      "hostTip": "Redis地址，如：192.168.1.200",
      "schemaKey": "Schema键",
      "schemaKeyTip": "Redis为数据同步额外存放数据结构的键值",
      "port": "端口",
      "portTip": "Redis端口，默认6379",
      "password": "密码",
      "deploymentMode": "部署模式",
      "username": "用户名",
      "usernameTip": "Redis用户名，默认为 'default'",
      "sentinelName": "哨兵/集群名称",
      "sentinelNameTip": "服务端可识别的客户端名称，不影响同步，仅用于监控",
      "standalone": "单机部署",
      "sentinel": "哨兵部署",
      "cluster": "集群",
      "sentinelAddress" : "服务器地址",
      "sentinelAddressTip" : "哨兵或集群需要填写的地址端口组，例如：192.168.1.200:6379, 192.168.1.201:6379",
      "Address" : "服务器地址",
      "sentinelPort": "端口",
      "valueType": "存储格式（选择Redis表示同构迁移）",
      "oneKey": "单键存储",
      "listHead": "包含表头",
      "keyExpression": "键表达式",
      "keyPrefix": "键前缀",
      "keyJoin": "关联键连接符",
      "keySuffix": "键后缀",
      "valueData": "值显示",
      "valueJoinString": "值连接符",
      "csvFormat": "Csv格式化",
      "expireTime": "有效时间（秒）",
      "resetExpire": "更新时重置有效时间",
      "prompt": "添加",
      "valueTypeTooltip": "Redis存储的数据结构（目前暂时支持String，List，Hash三种）",
      "oneKeyTooltip": "打开单键存储开关时，所有数据会写入同一个Redis键（特别留意：Redis单键最多支持512M）",
      "listHeadTooltip": "存储为List或Hash且单键方式，该开关支持加入标题行",
      "keyExpressionTooltip": "键表达式（数据开发专用），存储为Hash或非单键方式时，可以将每条数据存入自定义格式的键。例如：tap_\\${id}_\\${colName}（特别留意：推荐使用主键或更新条件字段的组合，若少选字段，可能导致键覆盖；若选过多其它字段，可能会影响删除、更新功能）",
      "keyPrefixTooltip": "键前缀（数据复制专用组合），存储为Hash或非单键方式时，可以将每条数据存入自定义前缀的键。",
      "keyJoinTooltip": "键连接符（数据复制专用组合），存储为Hash或非单键方式时，可以将每条数据存入自定义连接符。例如：填写'-',\\${pk1}-\\${pk2}-\\${pk3}",
      "keySuffixTooltip": "键后缀（数据复制专用组合），存储为Hash或非单键方式时，可以将每条数据存入自定义后缀的键",
      "valueDataTooltip": "存储的每行数据的格式，支持TEXT、JSON格式",
      "valueJoinStringTooltip": "若数据为TEXT格式，可自定义间隔符",
      "csvFormatTooltip": "打开CSV格式化开关，可以将TEXT转换为CSV的标准行",
      "databaseProp": "请输入0-15的整数",
      "rateLimit": "限流QPS",
      "rateLimitTooltip": "QPS限流，默认为5000"
    },
    "zh_TW": {
      "doc": "docs/redis_zh_TW.md",
      "host": "Redis地址",
      "hostTip": "Redis地址，如：192.168.1.200",
      "schemaKey": "Schema鍵",
      "schemaKeyTip": "Redis為數據同步額外存放數據結構的鍵值",
      "port": "端口",
      "portTip": "Redis端口，默認6379",
      "password": "密碼",
      "deploymentMode": "部署模式",
      "username": "用戶名",
      "usernameTip": "Redis用戶名，默認為 'default'",
      "sentinelName": "哨兵/集群名稱",
      "sentinelNameTip": "服務端可識別的客戶端名稱，不影響同步，僅用於監控",
      "standalone": "單機部署",
      "sentinel": "哨兵部署",
      "cluster": "集群",
      "sentinelAddress" : "服務器地址",
      "sentinelAddressTip" : "哨兵或集群需要填寫的地址端口組，例如：192.168.1.200:6379, 192.168.1.201:6379",
      "Address" : "服務器地址",
      "sentinelPort": "服務器端口",
      "valueType": "存储格式（选择Redis表示同构迁移）",
      "oneKey": "單鍵存储",
      "listHead": "包含表頭",
      "keyExpression": "鍵運算式",
      "keyPrefix": "鍵首碼",
      "keyJoin": "關聯鍵連接符",
      "keySuffix": "鍵尾碼",
      "valueData": "值顯示",
      "valueJoinString": "值連接符",
      "csvFormat": "Csv格式化",
      "expireTime": "有效時間（秒）",
      "resetExpire": "更新時重置有效時間",
      "prompt": "添加",
      "valueTypeTooltip": "Redis存儲的資料結構（現時暫時支持String，List，Hash三種）",
      "oneKeyTooltip": "打開單鍵存儲開關時，所有數據會寫入同一個Redis鍵（特別留意：Redis單鍵最多支持512M）",
      "listHeadTooltip": "存儲為List或Hash且單鍵管道，該開關支持加入標題行",
      "keyExpressionTooltip": "鍵運算式（數據開發專用），存儲為Hash或非單鍵管道時，可以將每條數據存入自定義格式的鍵。例如：tap_\\${id}_\\${colName}（特別留意：推薦使用主鍵或更新條件欄位的組合，若少選欄位，可能導致鍵覆蓋；若選過多其它欄位，可能會影響删除、更新功能）",
      "keyPrefixTooltip": "鍵首碼（數據複製專用組合），存儲為Hash或非單鍵管道時，可以將每條數據存入自定義首碼的鍵。",
      "keyJoinTooltip": "鍵連接符（數據複製專用組合），存儲為Hash或非單鍵管道時，可以將每條數據存入自定義連接符。例如：填寫'-'，\\${pk1}-\\${pk2}-\\${pk3}",
      "keySuffixTooltip": "鍵尾碼（數據複製專用組合），存儲為Hash或非單鍵管道時，可以將每條數據存入自定義尾碼的鍵",
      "valueDataTooltip": "存儲的每行數據的格式，支持TEXT、JSON格式",
      "valueJoinStringTooltip": "若數據為TEXT格式，可自定義間隔符",
      "csvFormatTooltip": "打開CSV格式化開關，可以將TEXT轉換為CSV的標準行",
      "databaseProp": "請輸入0-15的整數",
      "rateLimit": "限流QPS",
      "rateLimitTooltip": "QPS限流，默認為5000"
    }
  },
  "dataTypes": {
    "string": {
      "byte": "512m",
      "to": "TapString"
    },
    "long": {
      "bit": 64,
      "priority": 3,
      "value": [
        -9223372036854775808,
        9223372036854775807
      ],
      "to": "TapNumber"
    },
    "integer": {
      "bit": 32,
      "priority": 1,
      "value": [
        -2147483648,
        2147483647
      ],
      "to": "TapNumber"
    },
    "short": {
      "bit": 16,
      "priority": 3,
      "value": [
        -32768,
        32767
      ],
      "to": "TapNumber"
    },
    "double": {
      "precision": [
        1,
        17
      ],
      "preferPrecision": 11,
      "scale": [
        0,
        17
      ],
      "preferScale": 4,
      "fixed": false,
      "to": "TapNumber"
    },
    "float": {
      "precision": [
        1,
        6
      ],
      "scale": [
        0,
        6
      ],
      "fixed": false,
      "to": "TapNumber"
    },
    "boolean": {
      "to": "TapBoolean"
    },
    "date": {
      "byte": 3,
      "range": [
        "1000-01-01",
        "9999-12-31"
      ],
      "to": "TapDate"
    },
    "datetime": {
      "byte": 8,
      "range": [
        "1000-01-01 00:00:00 000000000",
        "9999-12-31 23:59:59 999999999"
      ],
      "to": "TapDateTime"
    }

  }
}